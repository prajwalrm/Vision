import cv2
import numpy as np

def extract_highlighted_text_opencv(image_path):
    # Read the image
    image = cv2.imread(image_path)
    hsv = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)

    # Define the range for yellow color
    lower_yellow = np.array([20, 100, 100])
    upper_yellow = np.array([30, 255, 255])

    # Create a mask to detect yellow-highlighted areas
    yellow_mask = cv2.inRange(hsv, lower_yellow, upper_yellow)

    # Find contours in the mask
    contours, _ = cv2.findContours(yellow_mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    extracted_texts = []
    total_price = 0

    for cnt in contours:
        x, y, w, h = cv2.boundingRect(cnt)

        # Crop the highlighted region
        highlighted_region = image[y:y+h, x:x+w]

        # Convert the highlighted region to grayscale
        gray = cv2.cvtColor(highlighted_region, cv2.COLOR_BGR2GRAY)

        # Apply thresholding to make text more visible
        _, binary = cv2.threshold(gray, 150, 255, cv2.THRESH_BINARY_INV)

        # Display extracted highlighted region
        cv2.imshow("Highlighted Text Region", binary)
        cv2.waitKey(0)

        # Save the region for potential manual verification (Optional)
        cv2.imwrite(f"highlighted_region_{x}_{y}.png", binary)

        # Add extracted text (placeholder since OCR is unavailable)
        extracted_texts.append({"highlighted_text": f"Highlighted region at ({x}, {y})"})

    cv2.destroyAllWindows()

    return extracted_texts, total_price

# Set image path
image_path = "C:\\Users\\Prajwal\\Pictures\\Screenshots\\op_1.PNG"

# Run the function
highlighted_texts, total_price = extract_highlighted_text_opencv(image_path)

# Print extracted information
print("Extracted Highlighted Texts:")
print(highlighted_texts)
print("\nTotal Highlighted Price:", total_price)
